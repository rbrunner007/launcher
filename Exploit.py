#!/usr/bin/env python3

import socket

class Exploit:
    def __init__(self, ip, port=False, debug=False):
        self.ip = ip
        self.port = port
        self.debug = debug
        self.dprint("Launching Exploit")
        self.__sock = self.__connect_to_client()

    #this is a debug print. Set debug to True to see
    #set debug to false to turn off
    def dprint(self, text, name=None):
        if name is None:
            name = self.__class__.__name__
        if self.debug:
            print("[d] " + name + ": " + text)

    #basic connect to client
    def __connect_to_client(self):
        if self.port:
            try:
                # Create a TCP/IP socket
                sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                # Connect the socket to the port where the server is listening
                server_address = (self.ip, self.port)
                self.dprint('Connecting to %s:%s.' % server_address)
                sock.connect(server_address)
                return sock
            except ConnectionRefusedError:
                print("[!] Connection to " + self.ip + " refused")
                return None
            except:
                print("[!] Error in opening socket")
                return None
        else:
            print("[!] No Port Specified")

    def recv(self, quiet=None):
        if quiet is None:
            quiet = False
        if self.__sock is None:
            if quiet: print("[!] Cannot recv, remote host is not connected")
            return None
        else:
            return self.__sock.recv(1024).decode()

    def send(self, msg, quiet=None):
        if quiet is None:
            quiet = False
        if self.__sock is None:
            if quiet: print("[!] Cannot send, remote host is not connected")
            return None
        else: 
            self.__sock.send(msg.encode())



